{"version":3,"sources":["components/Input/CheckMark.js","components/Input/CloseMark.js","components/Input/ValidateTooltip.js","components/Input/TooltipContent.js","components/Input/Input.js","components/Input/index.js","components/Button/index.js","App.js","serviceWorker.js","index.js"],"names":["CheckMark","react_default","a","createElement","index_esm","style","verticalAlign","size","color","CloseMark","ValidateTooltip","_ref","_ref$isValid","isValid","Input_CheckMark","Input_CloseMark","TooltipContent","_ref$haveNumber","haveNumber","_ref$haveUpperCase","haveUpperCase","_ref$haveMinLength","haveMinLength","_ref$haveLowerCase","haveLowerCase","_ref$strength","strength","strengthString","0","20","40","60","80","100","console","log","strengthClass","concat","className","Input_ValidateTooltip","lib_default","completed","Input","_ref$isSecure","isSecure","props","Object","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","isVisible","setVisible","_useState3","_useState4","showTooltip","setShowTooltip","_useState5","_useState6","setHaveNumber","_useState7","_useState8","sethaveUpperCase","_useState9","_useState10","sethaveLowerCase","_useState11","_useState12","sethaveMinLength","_useState13","_useState14","setStrength","inputEl","useRef","type","checkLowerCase","string","test","checkUpperCase","checkNumber","onChangeHandler","_ref2","asyncToGenerator","regenerator_default","mark","_callee","e","value","_strength","wrap","_context","prev","next","target","abrupt","PasswordChecker","check","sent","length","stop","_x","apply","this","arguments","label","react_tippy","html","Input_TooltipContent","open","trigger","position","disabled","arrow","title","distance","ref","onChange","onFocus","onBlur","onClick","current","Button","children","App","components_Input","components_Button","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.41366b11.chunk.js","sourcesContent":["import React from 'react';\r\nimport { IoIosCheckmark } from 'react-icons/io';\r\n\r\nfunction CheckMark() {\r\n    return (\r\n        <IoIosCheckmark\r\n            style={{ verticalAlign: 'middle' }}\r\n            size={24}\r\n            color=\"#66BB6A\"\r\n        />\r\n    );\r\n}\r\n\r\nexport default CheckMark;\r\n","import React from 'react';\r\nimport { IoIosClose } from 'react-icons/io';\r\n\r\nfunction CloseMark() {\r\n    return (\r\n        <IoIosClose\r\n            style={{ verticalAlign: 'middle' }}\r\n            color=\"#EF5350\"\r\n            size={24}\r\n        />\r\n    );\r\n}\r\n\r\nexport default CloseMark;\r\n","import React from 'react';\r\nimport CheckMark from './CheckMark';\r\nimport CloseMark from './CloseMark';\r\n\r\nfunction ValidateTooltip({ isValid = false }) {\r\n    if (isValid) {\r\n        return <CheckMark />;\r\n    } else {\r\n        return <CloseMark />;\r\n    }\r\n}\r\n\r\nexport default ValidateTooltip;\r\n","import React from 'react';\r\nimport Progress from 'react-progressbar';\r\nimport ValidateTooltip from './ValidateTooltip';\r\nimport './style.css';\r\n\r\nfunction TooltipContent({\r\n    haveNumber = false,\r\n    haveUpperCase = false,\r\n    haveMinLength = false,\r\n    haveLowerCase = false,\r\n    strength = 0\r\n}) {\r\n    const strengthString = {\r\n        0: '',\r\n        20: 'weak',\r\n        40: 'average',\r\n        60: 'fair',\r\n        80: 'good',\r\n        100: 'excellent'\r\n    };\r\n\r\n    const strengthColor = {\r\n        0: '',\r\n        20: '#F44336',\r\n        40: '#d35400',\r\n        60: '#8BC34A',\r\n        80: '#27ae60',\r\n        100: '#009432'\r\n    };\r\n\r\n    console.log(strength);\r\n\r\n    const strengthClass = `strength__string ${strengthString[strength]}`;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <header className=\"tooltip__header\">\r\n                Your password must contain:\r\n            </header>\r\n            <ul className=\"tooltip__list\">\r\n                <li>\r\n                    <ValidateTooltip isValid={haveMinLength} />8 or more\r\n                    characters\r\n                </li>\r\n                <li>\r\n                    <ValidateTooltip isValid={haveNumber} />a number\r\n                </li>\r\n                <li>\r\n                    <ValidateTooltip isValid={haveUpperCase} />\r\n                    an upercase letter\r\n                </li>\r\n                <li>\r\n                    <ValidateTooltip isValid={haveLowerCase} />a lowercase\r\n                    letter\r\n                </li>\r\n            </ul>\r\n            <div className=\"strength__meter\">\r\n                <div className=\"progress__container\">\r\n                    <Progress\r\n                        completed={strength}\r\n                        color={strengthColor[strength]}\r\n                    />\r\n                </div>\r\n\r\n                <span className={strengthClass}>\r\n                    {strengthString[strength]}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TooltipContent;\r\n","import React, { useState, useRef } from 'react';\r\nimport { IoMdEye, IoMdEyeOff } from 'react-icons/io';\r\nimport 'react-tippy/dist/tippy.css';\r\nimport { Tooltip } from 'react-tippy';\r\nimport PasswordChecker from 'pw-checker';\r\n\r\nimport TooltipContent from './TooltipContent';\r\n\r\nimport './style.css';\r\n\r\nfunction Input({ isSecure = false, ...props }) {\r\n    const [isVisible, setVisible] = useState(true);\r\n    const [showTooltip, setShowTooltip] = useState(false);\r\n    const [haveNumber, setHaveNumber] = useState(false);\r\n    const [haveUpperCase, sethaveUpperCase] = useState(false);\r\n    const [haveLowerCase, sethaveLowerCase] = useState(false);\r\n    const [haveMinLength, sethaveMinLength] = useState(false);\r\n    const [strength, setStrength] = useState(0);\r\n\r\n    const inputEl = useRef(null);\r\n\r\n    const type = isSecure ? 'password' : 'text';\r\n\r\n    const checkMinLength = string => {\r\n        return string.length >= 8;\r\n    };\r\n\r\n    const checkLowerCase = string => {\r\n        var regex = /^(?=.*[a-z]).+$/;\r\n\r\n        if (regex.test(string)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    const checkUpperCase = string => {\r\n        let regex = /^(?=.*[A-Z]).+$/;\r\n\r\n        if (regex.test(string)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    const checkNumber = string => {\r\n        let regex = /\\d/;\r\n\r\n        if (regex.test(string)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    const toggler = () => {\r\n        setVisible(!isVisible);\r\n        inputEl.current.type =\r\n            inputEl.current.type === 'text' ? 'password' : 'text';\r\n    };\r\n\r\n    const onFocusHandler = e => {\r\n        if (e.target.type === 'password') {\r\n            setShowTooltip(true);\r\n        }\r\n    };\r\n\r\n    const onBlurHandler = e => {\r\n        setShowTooltip(false);\r\n    };\r\n\r\n    const onChangeHandler = async e => {\r\n        const value = e.target.value;\r\n\r\n        if (e.target.type === 'password') {\r\n            if (!value) {\r\n                sethaveUpperCase(false);\r\n                sethaveMinLength(false);\r\n                setHaveNumber(false);\r\n                sethaveLowerCase(false);\r\n                setStrength(0);\r\n                return;\r\n            }\r\n\r\n            const strength = await PasswordChecker.check(value);\r\n            setStrength((strength + 1) * 20);\r\n\r\n            if (checkMinLength(value)) {\r\n                sethaveMinLength(true);\r\n            } else {\r\n                sethaveMinLength(false);\r\n            }\r\n\r\n            if (checkNumber(value)) {\r\n                setHaveNumber(true);\r\n            } else {\r\n                setHaveNumber(false);\r\n            }\r\n\r\n            if (checkLowerCase(value)) {\r\n                sethaveLowerCase(true);\r\n            } else {\r\n                sethaveLowerCase(false);\r\n            }\r\n\r\n            if (checkUpperCase(value)) {\r\n                sethaveUpperCase(true);\r\n            } else {\r\n                sethaveUpperCase(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"input__group\">\r\n            <label className=\"input__label\">{props.label}</label>\r\n\r\n            <div className=\"input__container\">\r\n                <Tooltip\r\n                    html={\r\n                        <TooltipContent\r\n                            haveLowerCase={haveLowerCase}\r\n                            haveMinLength={haveMinLength}\r\n                            haveNumber={haveNumber}\r\n                            haveUpperCase={haveUpperCase}\r\n                            strength={strength}\r\n                        />\r\n                    }\r\n                    open={showTooltip}\r\n                    trigger=\"manual\"\r\n                    position=\"left\"\r\n                    disabled={!isSecure}\r\n                    arrow={true}\r\n                    title=\"Your Password must contain:\"\r\n                    distance=\"20\"\r\n                >\r\n                    <input\r\n                        ref={inputEl}\r\n                        type={type}\r\n                        className=\"input__element\"\r\n                        onChange={onChangeHandler}\r\n                        onFocus={onFocusHandler}\r\n                        onBlur={onBlurHandler}\r\n                    />\r\n                </Tooltip>\r\n                {isSecure && (\r\n                    <div className=\"toggler\" onClick={toggler}>\r\n                        {isVisible && (\r\n                            <IoMdEye\r\n                                size={44}\r\n                                style={{ verticalAlign: 'middle' }}\r\n                            />\r\n                        )}\r\n                        {!isVisible && (\r\n                            <IoMdEyeOff\r\n                                size={44}\r\n                                style={{ verticalAlign: 'middle' }}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;\r\n","import Input from './Input';\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nimport './style.css';\r\n\r\nfunction Button(props) {\r\n    return (\r\n        <div>\r\n            <button>{props.children}</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport { IoIosAperture } from 'react-icons/io';\nimport Input from './components/Input';\nimport Button from './components/Button';\n\nimport './App.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <div className=\"app__container\">\n                <form>\n                    <div className=\"logo__container\">\n                        <IoIosAperture size={96} color=\"#2C3A47\" />\n                    </div>\n                    <h1 className=\"form__header\">\n                        Let's get your account set up\n                    </h1>\n                    <Input label=\"Work Email\" />\n                    <Input label=\"Password\" isSecure={true} />\n                    <Button>Signup</Button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}